scalar JSON

type Query {
  getItems: JSON
  queryStockXByString(query: String): JSON
  queryStockXByStyleAndSize(styleId: String, size: String): JSON
  queryStockXMarketData(productUUID: String, productSKU: String): JSON
  queryStockXByStyleAndAllSizes(styleId: String): JSON
  queryGetAllShoeData(styleId: String): JSON
  getCurrentSelling(qty: String): JSON
  loginToStockXWithEnv(email: String): JSON
}

type Mutation {
  createItem(product: ProductInput): JSON
  loginToStockX(email: String password: String): JSON
  # loginToStockXWithEnv(email: String): JSON
  addPortfolioItem(token: String!): JSON
  deletePortfolioItem(token: String!, id: String! ): JSON
  getProductMarketData(name: String): JSON
}

input ProductInput {
  productType: ProductType!
  title: String!
  vendor: String!
  variants: VariantInput
  purchasePrice: String!
}

input VariantInput {
  options: String
  price: String!
  sku: String
}

enum ProductType {
  PANTS
  SHOES
  ACCESSORIES
  HATS
  MISC
}

enum StoreFrontName {
  SHOPIFY
  STOCKX
}
